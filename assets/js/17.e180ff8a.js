(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{742:function(t,s,a){"use strict";a.r(s);var n=a(104),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"配置和运行环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置和运行环境"}},[t._v("#")]),t._v(" 配置和运行环境")]),t._v(" "),a("p",[t._v("在使用Egg框架进行多环境部署时，配置很大程度上决定了运行环境，当然使用什么的运行环境，框架也合并配置进行处理；")]),t._v(" "),a("h2",{attrs:{id:"运行环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行环境"}},[t._v("#")]),t._v(" 运行环境")]),t._v(" "),a("p",[t._v("一个 Web 应用本身应该是无状态的，"),a("strong",[t._v("并拥有根据运行环境设置自身的能力(很明确的为多环境部署提供有效方案)")])]),t._v(" "),a("p",[t._v("框架提供两种指定实际运行环境的而方式：")]),t._v(" "),a("ul",[a("li",[t._v("通过 config/env 文件指定，该文件的内容就是运行环境，如 prod。一般通过构建工具来生成这个文件。")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## config/env")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## prod环境，一般指上线正式环境")]),t._v("\nconfig.prod.js \n\n")])])]),a("ul",[a("li",[t._v("通过 EGG_SERVER_ENV 环境变量指定运行环境更加方便，比如在生产环境启动应用")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 启动指定里添加EGG_SERVER_ENV=prod")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("EGG_SERVER_ENV")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("prod "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n\n\n")])])]),a("h3",{attrs:{id:"获取方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取方式"}},[t._v("#")]),t._v(" 获取方式")]),t._v(" "),a("p",[t._v("项目里，可以很容易的通过"),a("code",[t._v("app.cifng.env")]),t._v("来确定应用的当前环境")]),t._v(" "),a("h3",{attrs:{id:"egg-server-env和node-env的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#egg-server-env和node-env的比较"}},[t._v("#")]),t._v(" EGG_SERVER_ENV和NODE_ENV的比较")]),t._v(" "),a("p",[t._v("很多 Node.js 应用会使用 NODE_ENV 来区分运行环境，但 EGG_SERVER_ENV 区分得更加精细。一般的项目开发流程包括：")]),t._v(" "),a("ul",[a("li",[t._v("本地开发环境")]),t._v(" "),a("li",[t._v("测试环境")]),t._v(" "),a("li",[t._v("生产环境")])]),t._v(" "),a("p",[t._v("除了本地开发环境和测试环境外，其他环境可统称为服务器环境，"),a("strong",[t._v("服务器环境的 NODE_ENV 应该为 production")]),t._v("，")]),t._v(" "),a("p",[t._v("框架默认支持的运行环境及映射关系（如果未指定 EGG_SERVER_ENV 会根据 NODE_ENV 来匹配）")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("当 NODE_ENV")]),t._v(" 为 production 而 "),a("code",[t._v("EGG_SERVER_ENV")]),t._v(" 未指定时，框架会将 "),a("code",[t._v("EGG_SERVER_ENV")]),t._v(" 设置成 prod。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("NODE_ENV")]),t._v(" "),a("th",[t._v("EGG_SERVER_ENV")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[t._v("local")]),t._v(" "),a("td",[t._v("本地开发环境")])]),t._v(" "),a("tr",[a("td",[t._v("test")]),t._v(" "),a("td",[t._v("unittest")]),t._v(" "),a("td",[t._v("单元测试")])]),t._v(" "),a("tr",[a("td",[t._v("production")]),t._v(" "),a("td",[t._v("prod")]),t._v(" "),a("td",[t._v("生产环境")])])])]),t._v(" "),a("p",[a("strong",[t._v("npm 也会使用这个变量，在应用部署的时候一般不会安装 devDependencies，所以这个值也应该为 production。")])]),t._v(" "),a("h3",{attrs:{id:"自定义启动环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义启动环境"}},[t._v("#")]),t._v(" 自定义启动环境")]),t._v(" "),a("p",[t._v("常规开发流程可能不仅仅只有以上几种环境，Egg 支持自定义环境来适应自己的开发流程。")]),t._v(" "),a("p",[t._v("例如，要为开发流程增加集成测试环境 SIT。将 EGG_SERVER_ENV 设置成 sit（并建议设置 NODE_ENV = production），启动时会加载 "),a("code",[t._v("config/config.sit.js")]),t._v("，运行环境变量 "),a("code",[t._v("app.config.env")]),t._v(" 会被设置成 sit。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 自定义sit环境")]),t._v("\nconfig/config.sit.js\n\n")])])]),a("ul",[a("li",[t._v("在 Koa 中我们通过 app.env 来进行环境判断，app.env 默认的值是 "),a("code",[t._v("process.env.NODE_ENV")]),t._v("。")]),t._v(" "),a("li",[t._v("在 Egg（和基于 Egg 的框架）中，配置统一都放置在 app.config 对象上，需要通过 "),a("code",[t._v("app.config.env")]),t._v(" 来区分环境，"),a("code",[t._v("app.env")]),t._v(" 不再使用（实际使用会有废弃报告）")])]),t._v(" "),a("p",[t._v("注意：process对象node.js中提供的内置对象，可以从中获取很多系统信息，用途极大！")]),t._v(" "),a("h2",{attrs:{id:"config配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config配置"}},[t._v("#")]),t._v(" Config配置")]),t._v(" "),a("p",[t._v("框架提供了强大且可扩展的配置功能，可以自动合并应用、插件、框架的配置，按顺序覆盖，且可以根据环境维护不同的配置。合并后的配置可直接从 "),a("code",[t._v("app.config")]),t._v(" 获取。")]),t._v(" "),a("p",[t._v("配置的管理的常见方案：")]),t._v(" "),a("ul",[a("li",[t._v("使用平台管理配置，应用构建时将当前环境的配置放入包内，启动时指定该配置。但应用就无法一次构建多次部署，而且本地开发环境想使用配置会变的很麻烦。")]),t._v(" "),a("li",[t._v("使用平台管理配置，在启动时将当前环境的配置通过环境变量传入，这是比较优雅的方式，但框架对运维的要求会比较高，需要部署平台支持，同时开发环境也有相同痛点。")]),t._v(" "),a("li",[t._v("使用代码管理配置，在代码中添加多个环境的配置，在启动时传入当前环境的参数即可。但无法全局配置，必须修改代码。")])]),t._v(" "),a("p",[a("strong",[t._v("最后一种配置方案，配置即代码，配置的变更也应该经过 review 后才能发布。应用包本身是可以部署在多个环境的，只需要指定运行环境即可。")])]),t._v(" "),a("h3",{attrs:{id:"多环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多环境配置"}},[t._v("#")]),t._v(" 多环境配置")]),t._v(" "),a("p",[t._v("框架支持根据环境来加载配置，定义多个环境的配置文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("config\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("- config.default.js "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 开发环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("- config.prod.js   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 生产环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("- config.unittest.js "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 测试环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("- config.local.js  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 本地环境")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("config.default.js")]),t._v(" 为默认的配置文件，所有环境都会加载这个配置文件")]),t._v("，一般也会作为开发环境的默认配置文件。")]),t._v(" "),a("p",[t._v("当指定 env 时会同时加载默认配置和对应的配置(具名配置)文件，"),a("strong",[t._v("具名配置和默认配置将合并(使用extend2深拷贝)成最终配置")]),t._v("，具名配置项会覆盖默认配置文件的同名配置")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("prod 环境会加载 "),a("code",[t._v("config.prod.js")]),t._v(" 和 "),a("code",[t._v("config.default.js")]),t._v(" 文件，"),a("code",[t._v("config.prod.js")]),t._v("会覆盖 "),a("code",[t._v("config.default.js")]),t._v(" 的同名配置。")])]),t._v(" "),a("li",[a("p",[t._v("test 环境会加载 "),a("code",[t._v("config.test.js")]),t._v(" 和 "),a("code",[t._v("config.default.js")]),t._v(" 文件，"),a("code",[t._v("config.test.js")]),t._v("会覆盖 "),a("code",[t._v("config.default.js")]),t._v(" 的同名配置。")])])]),t._v(" "),a("h3",{attrs:{id:"配置的写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置的写法"}},[t._v("#")]),t._v(" 配置的写法")]),t._v(" "),a("p",[t._v("配置文件返回的是一个 object 对象，可以覆盖框架的一些配置，应用也可以将自己业务的配置放到这里方便管理。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置 logger 文件的目录，logger 默认配置由框架提供")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logger"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home/admin/logs/demoapp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("了解node的exports用法的应该直到，还可以这样写：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置文件也可以简化的写成 exports.key = value 形式")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keys "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-cookie-secret-key'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("logger "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DEBUG'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("配置文件也可以返回一个 function，可以接受 appInfo 参数")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("appInfo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    logger"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 logger 目录放到代码目录下")]),t._v("\n      dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("appInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseDir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'logs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，内置的appInfo对象的属性有：")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// - pkg   package.json信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// - name  应用名，和pkg.name的值一致")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// - baseDir 项目代码的目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// - HOME  用户目录，如 root 账户为 /home/root")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// - root  应用根目录，只有在 local 和 unittest 环境下为 baseDir，其他都为 HOME")]),t._v("\n\n")])])]),a("p",[a("strong",[a("code",[t._v("appInfo.root")]),t._v(" 是一个优雅的适配，比如在服务器环境我们会使用 "),a("code",[t._v("/home/root/logs")]),t._v(" 作为日志目录，而本地开发时又不想污染用户目录，这样的适配就很好解决这个问题。")])]),t._v(" "),a("h3",{attrs:{id:"加载顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载顺序"}},[t._v("#")]),t._v(" 加载顺序")]),t._v(" "),a("p",[t._v("在应用、插件、框架都可以定义这些配置，而且目录结构都是一致的，但存在优先级（"),a("strong",[t._v("应用 > 框架 > 插件")]),t._v("），相对于此运行环境的优先级会更高。")]),t._v(" "),a("p",[t._v("比如在 prod 环境加载一个配置的加载顺序如下，后加载的会覆盖前面的同名配置。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 插件 config.default.js\n-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 框架 config.default.js\n-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 应用 config.default.js\n-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 插件 config.prod.js\n-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 框架 config.prod.js\n-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 应用 config.prod.js\n\n\n")])])]),a("p",[a("strong",[t._v("插件之间也会有加载顺序，但大致顺序类似，")])]),t._v(" "),a("h4",{attrs:{id:"合并规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并规则"}},[t._v("#")]),t._v(" 合并规则")]),t._v(" "),a("p",[t._v("框架直接覆盖数组而不是进行合并,例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  arr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  arr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => { arr: [ 3 ] }")]),t._v("\n\n")])])]),a("p",[t._v("配置的合并使用 extend2 模块进行深度拷贝，处理数组时会存在差异。")]),t._v(" "),a("h4",{attrs:{id:"配置结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置结果"}},[t._v("#")]),t._v(" 配置结果")]),t._v(" "),a("p",[t._v("框架在启动时会把合并后的最终配置 dump 到 run/application_config.json（worker 进程）和 run/agent_config.json（agent 进程）中，可以用来分析问题。")]),t._v(" "),a("p",[t._v("配置文件中会隐藏一些字段，主要包括两类:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如密码、密钥等安全字段，这里可以通过 config.dump.ignore 配置，必须是 Set 类型，查看默认配置。")])]),t._v(" "),a("li",[a("p",[t._v("如函数、Buffer 等类型，JSON.stringify 后的内容特别大")])])]),t._v(" "),a("p",[t._v("还会生成 run/application_config_meta.json（worker 进程）和 run/agent_config_meta.json（agent 进程）文件，用来排查属性的来源，如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logger"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dir"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/path/to/config/config.default.js"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);